#Enabling HTTP/2 support in Spring Boot
server:
    http2:
            enabled: true
---

#Enabling GZip compression in Spring Boot - Enable response compression
server:
    compression:
            enabled: true
# The comma-separated list of mime types that should be compressed
            mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/json;charset=UTF-8

# Compress the response only if the response size is at least 1KB
            min-response-size: 1024
---

## MULTIPART (MultipartProperties)
# Enable multipart uploads

spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 75MB

---

# Variaveis do properties da aplicacao     
outerboxtech:
  #docker
  origin-permitida: http://104.236.0.150:8080
  url-api-sca-client: http://104.236.0.150:8080
  #heroku
  #origin-permitida: https://obt-sca-web.herokuapp.com
  #url-api-sca-client: https://obt-sca-web.herokuapp.com
  
  seguranca:
    enable-https: true
  mail:
    host: smtpi.kinghost.net
    port: 587
    username: fabrica@outerboxtech.com.br
    password: f@br!c@1234
  
spring:
    datasources:
## Ambiente HOMOLOGAÇÃO - SCA - kinghost
#        url: jdbc:mysql://mysql.outerboxtech.com.br/outerboxtech?serverTimezone=UTC&useUnicode=yes&characterEncoding=UTF-8
#        username: outerboxtech
#        password: fabrica123

# Ambiente DESENVOLVIMENTO - SCA - kinghost
    -
      name: desenvolvimento
      #banco kinghost
      #url: jdbc:mysql://mysql.outerboxtech.com.br/outerboxtech01?serverTimezone=UTC&useUnicode=yes&characterEncoding=UTF-8
      #username: outerboxtech01
      #password: fabricadesenv1234
      #docker-machine
      url: jdbc:mysql://localhost:3306/sca_api?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
      username: outerboxtech
      password: outerboxtech
      #jawsdb heroku
      #url: jdbc:mysql://kf3k4aywsrp0d2is.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/ki2u8foaybvd5km3?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
      #username: s43272bdxi39c8wv
      #password: ma2dcc1lbo66oz8o
    profiles:
        active: oauth-security

#spring:
#  datasource:
#    password: '{JDBC_DATABASE_PASSWORD}'
#    url: '{JDBC_DATABASE_URL}'
#    username: '{JDBC_DATABASE_USERNAME}'
#  profiles:
#    active: oauth-security

---

spring:
    flyway:
        enabled: true
        locations: classpath:db/migration/mysql
        baseline-on-migrate: true
#        locations: classpath:db/migration/postgres
---

# exibe os comandos SQL
spring:
      jpa:
         database: MYSQL
         show-sql: false
         properties:
            hibernate: 
                dialect: org.hibernate.dialect.MySQL55Dialect    
                cache:
                    # To enable query cache, you need to specify one more additional configuration property.
                    use_query_cache: true
                    # Enable second level cache (you can skip this property because default value is true for it).
                    use_second_level_cache: true
                    region:
                        factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory

---
# Configuração do pool de conexão em produção

spring:
  datasource:
    hikari:
#     não retirar essa linha abaixo. O spring controla as transações
      auto-commit: false
      minimum-idle: 5
      maximum-pool-size: 15
      idle-timeout: 300000
      pool-name: "HikariPool"
      connectionTestQuery: SELECT 1
      max-lifetime: 1200000
      connection-timeout: 20000
      data-source-properties: 
            #  prepStmtCacheSize
            #  This sets the number of prepared statements that the MySQL driver will cache per connection. 
            #  The default is a conservative 25. We recommend setting this to between 250-500.
            prepStmtCacheSize: 250    
            #  prepStmtCacheSqlLimit
            #  This is the maximum length of a prepared SQL statement that the driver will cache. 
            #  The MySQL default is 256. In our experience, especially with ORM frameworks like Hibernate, this default is well below the threshold of generated statement lengths. 
            #  Our recommended setting is 2048.
            prepStmtCacheSqlLimit: 2048
            #  cachePrepStmts
            #  Neither of the above parameters have any effect if the cache is in fact disabled, as it is by default. 
            #  You must set this parameter to true.
            cachePrepStmts: true
            # useServerPrepStmts 
            # Newer versions of MySQL support server-side prepared statements, this can provide a substantial performance boost. 
            # Set this property to true.
            useServerPrepStmts: true
            # cacheResultSetMetadata
            # The number of queries to cache ResultSetMetadata for if cacheResultSetMetaData is set to ‘true’ (default 50)
            cacheResultSetMetadata: true
            # cacheServerConfiguration
            # Should the driver cache the results of 'SHOW VARIABLES' and 'SHOW COLLATION' on a per-URL basis
            cacheServerConfiguration: true
#---


#spring:
  boot:
    admin:
      client:
        instance:
          service-base-url: "http://104.236.0.150:8090"
          management-base-url: "http://104.236.0.150:8090"
          name: "SCA-API"
        url:
          "http://104.236.0.150:8093"
        username: "admin"
        password: "Out3rb0x_sb@"

management.endpoints.web.exposure.include: "*"

logging:
   file: logs/ambiente_producao.log
   pattern:
#     console: "%d %-5level %logger : %msg%n"
     console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
#     file: "%d %-5level [%thread] %logger : %msg%n"
     file: "%d %-5level [%thread] %logger{0} : %msg%n"
   level:
     root: INFO
     org.springframework.web: INFO
     org.springframework.security: INFO
     org.hibernate: ERROR
     org.hibernate.SQL: ERROR
     br.com.obt.sca.api: DEBUG
#     br.com.obt.sca.api.resource: WARN
        
        